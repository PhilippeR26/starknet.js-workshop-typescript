[
    {
      "name": "core::integer::u256",
      "type": "struct",
      "members": [
        {
          "name": "low",
          "type": "core::integer::u128"
        },
        {
          "name": "high",
          "type": "core::integer::u128"
        }
      ]
    },
    {
      "name": "burn",
      "type": "function",
      "inputs": [
        {
          "name": "token_id",
          "type": "core::integer::u256"
        }
      ],
      "outputs": [],
      "state_mutability": "external"
    },
    {
      "name": "core::byte_array::ByteArray",
      "type": "struct",
      "members": [
        {
          "name": "data",
          "type": "core::array::Array::<core::bytes_31::bytes31>"
        },
        {
          "name": "pending_word",
          "type": "core::felt252"
        },
        {
          "name": "pending_word_len",
          "type": "core::integer::u32"
        }
      ]
    },
    {
      "name": "nftwrapper::rwaMetadata::Issuer",
      "type": "struct",
      "members": [
        {
          "name": "name",
          "type": "core::byte_array::ByteArray"
        },
        {
          "name": "contact",
          "type": "core::byte_array::ByteArray"
        },
        {
          "name": "certification",
          "type": "core::byte_array::ByteArray"
        }
      ]
    },
    {
      "name": "nftwrapper::rwaMetadata::AssetType",
      "type": "enum",
      "variants": [
        {
          "name": "Cash",
          "type": "()"
        },
        {
          "name": "Commodity",
          "type": "()"
        },
        {
          "name": "Stock",
          "type": "()"
        },
        {
          "name": "Bond",
          "type": "()"
        },
        {
          "name": "Credit",
          "type": "()"
        },
        {
          "name": "Art",
          "type": "()"
        },
        {
          "name": "IntellectualProperty",
          "type": "()"
        }
      ]
    },
    {
      "name": "nftwrapper::rwaMetadata::Valuation",
      "type": "struct",
      "members": [
        {
          "name": "currency",
          "type": "core::byte_array::ByteArray"
        },
        {
          "name": "amount",
          "type": "core::integer::u256"
        }
      ]
    },
    {
      "name": "nftwrapper::rwaMetadata::Document",
      "type": "struct",
      "members": [
        {
          "name": "document_name",
          "type": "core::byte_array::ByteArray"
        },
        {
          "name": "document_type",
          "type": "core::byte_array::ByteArray"
        },
        {
          "name": "document_url",
          "type": "core::byte_array::ByteArray"
        }
      ]
    },
    {
      "name": "nftwrapper::rwaMetadata::AssetDetails",
      "type": "struct",
      "members": [
        {
          "name": "location",
          "type": "core::byte_array::ByteArray"
        },
        {
          "name": "legal_status",
          "type": "core::byte_array::ByteArray"
        },
        {
          "name": "valuation",
          "type": "nftwrapper::rwaMetadata::Valuation"
        },
        {
          "name": "issued_date",
          "type": "core::byte_array::ByteArray"
        },
        {
          "name": "expiry_date",
          "type": "core::byte_array::ByteArray"
        },
        {
          "name": "condition",
          "type": "core::byte_array::ByteArray"
        },
        {
          "name": "dimensions",
          "type": "core::byte_array::ByteArray"
        },
        {
          "name": "material",
          "type": "core::byte_array::ByteArray"
        },
        {
          "name": "color",
          "type": "core::byte_array::ByteArray"
        },
        {
          "name": "historical_significance",
          "type": "core::byte_array::ByteArray"
        },
        {
          "name": "document",
          "type": "nftwrapper::rwaMetadata::Document"
        }
      ]
    },
    {
      "name": "nftwrapper::rwaMetadata::Owner",
      "type": "struct",
      "members": [
        {
          "name": "name",
          "type": "core::byte_array::ByteArray"
        },
        {
          "name": "contact",
          "type": "core::byte_array::ByteArray"
        }
      ]
    },
    {
      "name": "nftwrapper::rwaMetadata::RoyaltyInfo",
      "type": "struct",
      "members": [
        {
          "name": "recipient",
          "type": "core::starknet::contract_address::ContractAddress"
        },
        {
          "name": "percentage",
          "type": "core::integer::u256"
        }
      ]
    },
    {
      "name": "nftwrapper::rwaMetadata::RWAMetadata",
      "type": "struct",
      "members": [
        {
          "name": "name",
          "type": "core::byte_array::ByteArray"
        },
        {
          "name": "description",
          "type": "core::byte_array::ByteArray"
        },
        {
          "name": "image",
          "type": "core::byte_array::ByteArray"
        },
        {
          "name": "external_url",
          "type": "core::byte_array::ByteArray"
        },
        {
          "name": "asset_id",
          "type": "core::byte_array::ByteArray"
        },
        {
          "name": "issuer",
          "type": "nftwrapper::rwaMetadata::Issuer"
        },
        {
          "name": "asset_type",
          "type": "nftwrapper::rwaMetadata::AssetType"
        },
        {
          "name": "asset_details",
          "type": "nftwrapper::rwaMetadata::AssetDetails"
        },
        {
          "name": "current_owner",
          "type": "nftwrapper::rwaMetadata::Owner"
        },
        {
          "name": "royalty_info",
          "type": "nftwrapper::rwaMetadata::RoyaltyInfo"
        },
        {
          "name": "legal_jurisdiction",
          "type": "core::byte_array::ByteArray"
        },
        {
          "name": "disclaimer",
          "type": "core::byte_array::ByteArray"
        }
      ]
    },
    {
      "name": "mint",
      "type": "function",
      "inputs": [
        {
          "name": "metadata",
          "type": "nftwrapper::rwaMetadata::RWAMetadata"
        }
      ],
      "outputs": [],
      "state_mutability": "external"
    },
    {
      "name": "totalSupply",
      "type": "function",
      "inputs": [],
      "outputs": [
        {
          "type": "core::integer::u256"
        }
      ],
      "state_mutability": "view"
    },
    {
      "name": "get_uri",
      "type": "function",
      "inputs": [
        {
          "name": "token_id",
          "type": "core::integer::u256"
        }
      ],
      "outputs": [
        {
          "type": "nftwrapper::rwaMetadata::RWAMetadata"
        }
      ],
      "state_mutability": "view"
    },
    {
      "name": "change_uri",
      "type": "function",
      "inputs": [
        {
          "name": "token_id",
          "type": "core::integer::u256"
        },
        {
          "name": "metadata",
          "type": "nftwrapper::rwaMetadata::RWAMetadata"
        }
      ],
      "outputs": [],
      "state_mutability": "external"
    },
    {
      "name": "ERC721MixinImpl",
      "type": "impl",
      "interface_name": "openzeppelin_token::erc721::interface::ERC721ABI"
    },
    {
      "name": "core::array::Span::<core::felt252>",
      "type": "struct",
      "members": [
        {
          "name": "snapshot",
          "type": "@core::array::Array::<core::felt252>"
        }
      ]
    },
    {
      "name": "core::bool",
      "type": "enum",
      "variants": [
        {
          "name": "False",
          "type": "()"
        },
        {
          "name": "True",
          "type": "()"
        }
      ]
    },
    {
      "name": "openzeppelin_token::erc721::interface::ERC721ABI",
      "type": "interface",
      "items": [
        {
          "name": "balance_of",
          "type": "function",
          "inputs": [
            {
              "name": "account",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "outputs": [
            {
              "type": "core::integer::u256"
            }
          ],
          "state_mutability": "view"
        },
        {
          "name": "owner_of",
          "type": "function",
          "inputs": [
            {
              "name": "token_id",
              "type": "core::integer::u256"
            }
          ],
          "outputs": [
            {
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "state_mutability": "view"
        },
        {
          "name": "safe_transfer_from",
          "type": "function",
          "inputs": [
            {
              "name": "from",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "to",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "token_id",
              "type": "core::integer::u256"
            },
            {
              "name": "data",
              "type": "core::array::Span::<core::felt252>"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "name": "transfer_from",
          "type": "function",
          "inputs": [
            {
              "name": "from",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "to",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "token_id",
              "type": "core::integer::u256"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "name": "approve",
          "type": "function",
          "inputs": [
            {
              "name": "to",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "token_id",
              "type": "core::integer::u256"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "name": "set_approval_for_all",
          "type": "function",
          "inputs": [
            {
              "name": "operator",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "approved",
              "type": "core::bool"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "name": "get_approved",
          "type": "function",
          "inputs": [
            {
              "name": "token_id",
              "type": "core::integer::u256"
            }
          ],
          "outputs": [
            {
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "state_mutability": "view"
        },
        {
          "name": "is_approved_for_all",
          "type": "function",
          "inputs": [
            {
              "name": "owner",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "operator",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "outputs": [
            {
              "type": "core::bool"
            }
          ],
          "state_mutability": "view"
        },
        {
          "name": "supports_interface",
          "type": "function",
          "inputs": [
            {
              "name": "interface_id",
              "type": "core::felt252"
            }
          ],
          "outputs": [
            {
              "type": "core::bool"
            }
          ],
          "state_mutability": "view"
        },
        {
          "name": "name",
          "type": "function",
          "inputs": [],
          "outputs": [
            {
              "type": "core::byte_array::ByteArray"
            }
          ],
          "state_mutability": "view"
        },
        {
          "name": "symbol",
          "type": "function",
          "inputs": [],
          "outputs": [
            {
              "type": "core::byte_array::ByteArray"
            }
          ],
          "state_mutability": "view"
        },
        {
          "name": "token_uri",
          "type": "function",
          "inputs": [
            {
              "name": "token_id",
              "type": "core::integer::u256"
            }
          ],
          "outputs": [
            {
              "type": "core::byte_array::ByteArray"
            }
          ],
          "state_mutability": "view"
        },
        {
          "name": "balanceOf",
          "type": "function",
          "inputs": [
            {
              "name": "account",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "outputs": [
            {
              "type": "core::integer::u256"
            }
          ],
          "state_mutability": "view"
        },
        {
          "name": "ownerOf",
          "type": "function",
          "inputs": [
            {
              "name": "tokenId",
              "type": "core::integer::u256"
            }
          ],
          "outputs": [
            {
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "state_mutability": "view"
        },
        {
          "name": "safeTransferFrom",
          "type": "function",
          "inputs": [
            {
              "name": "from",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "to",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "tokenId",
              "type": "core::integer::u256"
            },
            {
              "name": "data",
              "type": "core::array::Span::<core::felt252>"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "name": "transferFrom",
          "type": "function",
          "inputs": [
            {
              "name": "from",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "to",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "tokenId",
              "type": "core::integer::u256"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "name": "setApprovalForAll",
          "type": "function",
          "inputs": [
            {
              "name": "operator",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "approved",
              "type": "core::bool"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "name": "getApproved",
          "type": "function",
          "inputs": [
            {
              "name": "tokenId",
              "type": "core::integer::u256"
            }
          ],
          "outputs": [
            {
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "state_mutability": "view"
        },
        {
          "name": "isApprovedForAll",
          "type": "function",
          "inputs": [
            {
              "name": "owner",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "operator",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "outputs": [
            {
              "type": "core::bool"
            }
          ],
          "state_mutability": "view"
        },
        {
          "name": "tokenURI",
          "type": "function",
          "inputs": [
            {
              "name": "tokenId",
              "type": "core::integer::u256"
            }
          ],
          "outputs": [
            {
              "type": "core::byte_array::ByteArray"
            }
          ],
          "state_mutability": "view"
        }
      ]
    },
    {
      "name": "AccessControlImpl",
      "type": "impl",
      "interface_name": "openzeppelin_access::accesscontrol::interface::IAccessControl"
    },
    {
      "name": "openzeppelin_access::accesscontrol::interface::IAccessControl",
      "type": "interface",
      "items": [
        {
          "name": "has_role",
          "type": "function",
          "inputs": [
            {
              "name": "role",
              "type": "core::felt252"
            },
            {
              "name": "account",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "outputs": [
            {
              "type": "core::bool"
            }
          ],
          "state_mutability": "view"
        },
        {
          "name": "get_role_admin",
          "type": "function",
          "inputs": [
            {
              "name": "role",
              "type": "core::felt252"
            }
          ],
          "outputs": [
            {
              "type": "core::felt252"
            }
          ],
          "state_mutability": "view"
        },
        {
          "name": "grant_role",
          "type": "function",
          "inputs": [
            {
              "name": "role",
              "type": "core::felt252"
            },
            {
              "name": "account",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "name": "revoke_role",
          "type": "function",
          "inputs": [
            {
              "name": "role",
              "type": "core::felt252"
            },
            {
              "name": "account",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "name": "renounce_role",
          "type": "function",
          "inputs": [
            {
              "name": "role",
              "type": "core::felt252"
            },
            {
              "name": "account",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        }
      ]
    },
    {
      "name": "AccessControlCamelImpl",
      "type": "impl",
      "interface_name": "openzeppelin_access::accesscontrol::interface::IAccessControlCamel"
    },
    {
      "name": "openzeppelin_access::accesscontrol::interface::IAccessControlCamel",
      "type": "interface",
      "items": [
        {
          "name": "hasRole",
          "type": "function",
          "inputs": [
            {
              "name": "role",
              "type": "core::felt252"
            },
            {
              "name": "account",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "outputs": [
            {
              "type": "core::bool"
            }
          ],
          "state_mutability": "view"
        },
        {
          "name": "getRoleAdmin",
          "type": "function",
          "inputs": [
            {
              "name": "role",
              "type": "core::felt252"
            }
          ],
          "outputs": [
            {
              "type": "core::felt252"
            }
          ],
          "state_mutability": "view"
        },
        {
          "name": "grantRole",
          "type": "function",
          "inputs": [
            {
              "name": "role",
              "type": "core::felt252"
            },
            {
              "name": "account",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "name": "revokeRole",
          "type": "function",
          "inputs": [
            {
              "name": "role",
              "type": "core::felt252"
            },
            {
              "name": "account",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "name": "renounceRole",
          "type": "function",
          "inputs": [
            {
              "name": "role",
              "type": "core::felt252"
            },
            {
              "name": "account",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        }
      ]
    },
    {
      "name": "constructor",
      "type": "constructor",
      "inputs": [
        {
          "name": "default_admin",
          "type": "core::starknet::contract_address::ContractAddress"
        },
        {
          "name": "minter",
          "type": "core::starknet::contract_address::ContractAddress"
        }
      ]
    },
    {
      "kind": "struct",
      "name": "openzeppelin_token::erc721::erc721::ERC721Component::Transfer",
      "type": "event",
      "members": [
        {
          "kind": "key",
          "name": "from",
          "type": "core::starknet::contract_address::ContractAddress"
        },
        {
          "kind": "key",
          "name": "to",
          "type": "core::starknet::contract_address::ContractAddress"
        },
        {
          "kind": "key",
          "name": "token_id",
          "type": "core::integer::u256"
        }
      ]
    },
    {
      "kind": "struct",
      "name": "openzeppelin_token::erc721::erc721::ERC721Component::Approval",
      "type": "event",
      "members": [
        {
          "kind": "key",
          "name": "owner",
          "type": "core::starknet::contract_address::ContractAddress"
        },
        {
          "kind": "key",
          "name": "approved",
          "type": "core::starknet::contract_address::ContractAddress"
        },
        {
          "kind": "key",
          "name": "token_id",
          "type": "core::integer::u256"
        }
      ]
    },
    {
      "kind": "struct",
      "name": "openzeppelin_token::erc721::erc721::ERC721Component::ApprovalForAll",
      "type": "event",
      "members": [
        {
          "kind": "key",
          "name": "owner",
          "type": "core::starknet::contract_address::ContractAddress"
        },
        {
          "kind": "key",
          "name": "operator",
          "type": "core::starknet::contract_address::ContractAddress"
        },
        {
          "kind": "data",
          "name": "approved",
          "type": "core::bool"
        }
      ]
    },
    {
      "kind": "enum",
      "name": "openzeppelin_token::erc721::erc721::ERC721Component::Event",
      "type": "event",
      "variants": [
        {
          "kind": "nested",
          "name": "Transfer",
          "type": "openzeppelin_token::erc721::erc721::ERC721Component::Transfer"
        },
        {
          "kind": "nested",
          "name": "Approval",
          "type": "openzeppelin_token::erc721::erc721::ERC721Component::Approval"
        },
        {
          "kind": "nested",
          "name": "ApprovalForAll",
          "type": "openzeppelin_token::erc721::erc721::ERC721Component::ApprovalForAll"
        }
      ]
    },
    {
      "kind": "enum",
      "name": "openzeppelin_introspection::src5::SRC5Component::Event",
      "type": "event",
      "variants": []
    },
    {
      "kind": "struct",
      "name": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleGranted",
      "type": "event",
      "members": [
        {
          "kind": "data",
          "name": "role",
          "type": "core::felt252"
        },
        {
          "kind": "data",
          "name": "account",
          "type": "core::starknet::contract_address::ContractAddress"
        },
        {
          "kind": "data",
          "name": "sender",
          "type": "core::starknet::contract_address::ContractAddress"
        }
      ]
    },
    {
      "kind": "struct",
      "name": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleRevoked",
      "type": "event",
      "members": [
        {
          "kind": "data",
          "name": "role",
          "type": "core::felt252"
        },
        {
          "kind": "data",
          "name": "account",
          "type": "core::starknet::contract_address::ContractAddress"
        },
        {
          "kind": "data",
          "name": "sender",
          "type": "core::starknet::contract_address::ContractAddress"
        }
      ]
    },
    {
      "kind": "struct",
      "name": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleAdminChanged",
      "type": "event",
      "members": [
        {
          "kind": "data",
          "name": "role",
          "type": "core::felt252"
        },
        {
          "kind": "data",
          "name": "previous_admin_role",
          "type": "core::felt252"
        },
        {
          "kind": "data",
          "name": "new_admin_role",
          "type": "core::felt252"
        }
      ]
    },
    {
      "kind": "enum",
      "name": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::Event",
      "type": "event",
      "variants": [
        {
          "kind": "nested",
          "name": "RoleGranted",
          "type": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleGranted"
        },
        {
          "kind": "nested",
          "name": "RoleRevoked",
          "type": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleRevoked"
        },
        {
          "kind": "nested",
          "name": "RoleAdminChanged",
          "type": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleAdminChanged"
        }
      ]
    },
    {
      "kind": "enum",
      "name": "nftwrapper::RWANFT::RWANFT::Event",
      "type": "event",
      "variants": [
        {
          "kind": "flat",
          "name": "ERC721Event",
          "type": "openzeppelin_token::erc721::erc721::ERC721Component::Event"
        },
        {
          "kind": "flat",
          "name": "SRC5Event",
          "type": "openzeppelin_introspection::src5::SRC5Component::Event"
        },
        {
          "kind": "flat",
          "name": "AccessControlEvent",
          "type": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::Event"
        }
      ]
    }
  ]